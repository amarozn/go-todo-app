basePath: /
definitions:
  dto.CreateTodoInput:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
  dto.CreateTodoOutput:
    properties:
      todo_id:
        type: string
    type: object
  dto.ErrorOutput:
    properties:
      code:
        type: integer
      details:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  dto.HealthOutput:
    properties:
      dependencies:
        additionalProperties:
          type: boolean
        type: object
      status:
        example: healthy
        type: string
    type: object
  dto.TodoOutput:
    properties:
      completed:
        example: false
        type: boolean
      created_at:
        example: "2020-07-28T07:32:32.71472Z"
        type: string
      description:
        example: Market shopping
        type: string
      id:
        example: 5f68b3f08c111c96d1f8d9a3
        type: string
      title:
        example: Shopping
        type: string
      updated_at:
        example: "2020-07-30T07:32:32.71472Z"
        type: string
    type: object
  dto.UpdateTodoInput:
    properties:
      completed:
        type: boolean
      description:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample todo restful api server.
  license: {}
  title: Todo Example API
  version: 1.0.0
paths:
  /api/health:
    get:
      consumes:
      - application/json
      description: Get api healthy status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HealthOutput'
      summary: Check api status
      tags:
      - Health Check
  /api/health/dependencies:
    get:
      consumes:
      - application/json
      description: Get api healthy status with dependencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HealthOutput'
      summary: Check api status
      tags:
      - Health Check
  /api/v1/todo:
    get:
      consumes:
      - application/json
      description: Get all todo array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.TodoOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
      summary: Get all todo
      tags:
      - Todo
  /api/v1/todo/:
    post:
      consumes:
      - application/json
      description: add by json todo
      parameters:
      - description: Create todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTodoInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateTodoOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
      summary: Create a todo
      tags:
      - Todo
  /api/v1/todo/{id}:
    delete:
      consumes:
      - application/json
      description: Delete by todo id
      parameters:
      - description: Todo Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/dto.TodoOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
      summary: Delete a todo
      tags:
      - Todo
    get:
      consumes:
      - application/json
      description: Get todo by id
      parameters:
      - description: Todo Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TodoOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
      summary: Find a todo
      tags:
      - Todo
    put:
      consumes:
      - application/json
      description: update by json todo
      parameters:
      - description: Todo Id
        in: path
        name: id
        required: true
        type: string
      - description: Update todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTodoInput'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/dto.TodoOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutput'
      summary: Update a todo
      tags:
      - Todo
swagger: "2.0"
